/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2016-11-22 01:28:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.text.NumberFormat;
import java.sql.*;

public final class listprod_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Kyla Reid and Megan Kurz Grocery</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h1>Search for the products you want to buy:</h1>\r\n");
      out.write("\r\n");
      out.write("\t<form method=\"get\" action=\"listprod.jsp\">\r\n");
      out.write("\t\t<input type=\"text\" name=\"productName\" size=\"50\"> <input\r\n");
      out.write("\t\t\ttype=\"submit\" value=\"Submit\"><input type=\"reset\"\r\n");
      out.write("\t\t\tvalue=\"Reset\"> (Leave blank for all products)\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\t");

		// Get product name to search for

		// Variable name now contains the search string the user entered
		// Use it to build a query and print out the resultset.  Make sure to use PreparedStatement!

		// Make the connection

		// Print out the ResultSet

		// For each product create a link of the form
		// addcart.jsp?id=<productId>&name=<productName>&price=<productPrice>

		// Close connection

		// Useful code for formatting currency values:
		// NumberFormat currFormat = NumberFormat.getCurrencyInstance();
		// out.println(currFormat.format(5.0);	// Prints $5.00
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t");

		Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
		Connection con = null;
		String url = "jdbc:sqlserver://sql04.ok.ubc.ca:1433;DatabaseName=db_kreid;";
		String uid = "kreid";
		String pw = "39265137";
		String name = request.getParameter("productName");

		try {
			con = DriverManager.getConnection(url, uid, pw);
			boolean hasName = (name != null && !name.equals(""));
			if (hasName) {
				out.println("<h2>Products containing '" + name + "'</h2>");
				out.println("<table> <tr><td></td><td><h3>Product Name</h3></td><td><h3>Price</h3></td></tr>");
				String SQL = "select productName, price, productId from Product where productName like ? Order by productName";
				PreparedStatement pstmt = con.prepareStatement(SQL);
				pstmt.setString(1, "%" + name + "%");
				ResultSet rst = pstmt.executeQuery();
				while (rst.next()) {
					out.println("<tr><td><a href=\"addcart.jsp?id="
							+ rst.getString(3) + "&name="
							+ rst.getString(1) + "&price="
							+ rst.getString(2) + "\">Add to cart</a>"
							+ "</td><td>" + rst.getString(1) + "</td><td>"
							+ rst.getString(2) + "</td></tr>");
				}
				out.println("</table>");
			} else {
				out.println("<h2>All Products</h2>");
				out.println("<table> <tr><td></td><td><h3>Product Name</h3></td><td><h3>Price</h3></td></tr>");
				String SQL = "select productName, price, productId from Product Order by productName";
				PreparedStatement pstmt = con.prepareStatement(SQL);
				ResultSet rst = pstmt.executeQuery();
				while (rst.next()) {
					out.println("<tr><td><a href=\"addcart.jsp?id="
							+ rst.getInt(3) + "&name=" + rst.getString(1)
							+ "&price=" + rst.getString(2)
							+ " \">Add to cart</a>" + "</td><td>"
							+ rst.getString(1) + "</td><td>"
							+ rst.getString(2) + "</td></tr>");
				}
				out.println("</table>");
			}
		} catch (SQLException ex) {
			out.println(ex);
		} finally {
			if (con != null)
				try {
					con.close();
				} catch (SQLException ex) {
					System.err.println("SQLException: " + ex);
				}
		}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
